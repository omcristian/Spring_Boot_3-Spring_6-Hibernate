https://perficient.udemy.com/course/spring-hibernate-tutorial/learn/lecture/36829930#overview


Spring Boots aps include embedded server, so we can run as standalone:
java -jar myapp.jar


# Video 6
http://start.spring.io

localhost:8080



# video 8
boilerplate = repetitivo



# video 14

search.maven.org

mvnw clean compile test
or
mvn clean compile test



# video 15
application.properties (add Spring Boot properties)
	# configure server port
	server.port=8585

	# configure my propos
	coach.name=Mickey Mouse
	team.name=The Mouse Crew



# video 24
	spring security 
		user: user
		password:4383c884-6bde-4232-8e70-2b1e850a40ce



# video 27
run Spring Boots from CLI:

cd C:\Users\cristian.ortiz\git_personal\Spring_Boot_3-Spring_6-Hibernate\dev-spring-boot\01-spring-boot-overview\05-command-line-demo
mvnw package
java -jar target\mycoolapp-0.0.1-SNAPSHOT.jar

mvnw spring-boot:run



# Video 66

# Render: postgresql_spring3_udemy
# Postgres (DATABASE: student_tracker)
hostname: dpg-cq621f4s1f4s73dr4j40-a.oregon-postgres.render.com
External Database URL: postgresql://springstudent:springstudent@dpg-cq621f4s1f4s73dr4j40-a.oregon-postgres.render.com/postgresql_db_ni1k_1eio

Port: 5432
DATABASE: student_tracker (admin db: postgresql_db_ni1k)
PostgreSQL Version: 16
admin user: postgres
user: springstudent
password: springstudent (old: NfFU7SHxd4hxsW5oBxlr3ACvjtQPFTTa)
PSQL Command: PGPASSWORD=springstudent psql -h dpg-cq621f4s1f4s73dr4j40-a.oregon-postgres.render.com -U springstudent postgresql_db_ni1k_1eio

-- ALTER USER springstudent WITH PASSWORD 'springstudent';



# applications.properties
spring.datasource.url=jdbc:postgresql://dpg-cq621f4s1f4s73dr4j40-a.oregon-postgres.render.com:5432/student_tracker
spring.datasource.username=springstudent
spring.datasource.password=springstudent

# Turn off the Spring Boot banner
spring.main.banner-mode=off

# Reduce logging leve. Set logging level to warn
logging.level.root=warn


# Change Postgres Auto increment
ALTER SEQUENCE student_id_seq RESTART WITH 3000;


# Database versioning
# Schema migration tools
Liquibase and Flyway


_________________________

# API for testing and prototyping
https://jsonplaceholder.typicode.com/


__________________________________

CREATE DATABASE employee_directory;

# applications.properties
spring.datasource.url=jdbc:postgresql://dpg-cq621f4s1f4s73dr4j40-a.oregon-postgres.render.com:5432/employee_directory
spring.datasource.username=springstudent
spring.datasource.password=springstudent


__________________________________


Apache Maven 3.9.6 (bc0240f3c744dd6b6ec2920b3cd08dcc295161ae)
Maven home: C:\Users\cristian.ortiz\.m2\wrapper\dists\apache-maven-3.9.6-bin\3311e1d4\apache-maven-3.9.6
Java version: 21.0.1, vendor: Oracle Corporation, runtime: C:\Program Files\OpenJDK\jdk-21.0.1


# Docker
openjdk:21-jdk-slim


# https://community.render.com/t/running-java-spring-boot-in-docker-container-on-web-services/3232
-------------------
error: failed to solve: lstat /home/user/.local/tmp/buildkit-mount4179102238/target: no such file or directory
--------------------
error: failed to solve: lstat /home/user/.local/tmp/buildkit-mount1882155463/target: no such file or directory

--

# Deployed URL, API
dev: https://ingenesisweb-dev.onrender.com/api/clientes
qa: https://ingenesisweb-qa.onrender.com/api/clientes
PROD: https://ingenesisweb.onrender.com/api/clientes


# private URL to trigger a deploy
https://api.render.com/deploy/srv-cq6ce7qju9rs73e4ile0?key=MMn0Uu3U6rI



